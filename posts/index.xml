<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Todos Posts - Blog do Pedro Pozzobon</title>
        <link>http://pedropozzobon.com/posts/</link>
        <description>Todos Posts | Blog do Pedro Pozzobon</description>
        <generator>Hugo -- gohugo.io</generator><language>pt-br</language><managingEditor>pedro@aeroinovacoes.com (Pedro Pozzobon)</managingEditor>
            <webMaster>pedro@aeroinovacoes.com (Pedro Pozzobon)</webMaster><lastBuildDate>Sat, 10 Apr 2021 12:00:00 -0300</lastBuildDate><atom:link href="http://pedropozzobon.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Como produzir um relatório a partir de um Jupyter Notebook</title>
    <link>http://pedropozzobon.com/como-produzir-um-relat%C3%B3rio-a-partir-de-um-jupyter-notebook/</link>
    <pubDate>Sat, 10 Apr 2021 12:00:00 -0300</pubDate>
    <author>Autor</author>
    <guid>http://pedropozzobon.com/como-produzir-um-relat%C3%B3rio-a-partir-de-um-jupyter-notebook/</guid>
    <description><![CDATA[<p>Um problema comum é como compartilhar Jupyter Notebooks com usuários não-técnicos. Das várias soluções disponíveis, a que achei mais simples até o momento é exportar os notebooks como html usando o <a href="https://nbconvert.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener noreffer">nbconvert</a>. O formato html é interessante pois com ele é possível preservar conteúdo interativo, como os gráficos gerados pelo <code>plotly</code>, por exemplo.</p>
<p>Para utilizar o nbconvert, basta usar o comando</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">jupyter nbconvert &lt;path-to-notebook&gt; --to html
</code></pre></td></tr></table>
</div>
</div><p>É possível customizar o template utilizado para fazer a conversão. Podemos, por exemplo, adicionar uma logomarca no cabeçalho dos notebooks e um texto padrão de rodapé.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Dica<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">As instruções a seguir se aplicam para versão do 6.0.7 ou superior</div>
        </div>
    </div>
<p>Vamos criar um novo template e adicionar as modificações. Criar uma pasta com o nome desejado do template, em nosso exemplo <code>&lt;template-name&gt;</code>. Essa pasta deve estar dentro de um dos diretórios esperados pelo nbconvert. Para consultar os diretórios permitidos, usar o comando:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">jupyter --paths
</code></pre></td></tr></table>
</div>
</div><p>Em meu caso, escolhi <code>~/miniconda3/envs/&lt;env-name&gt;/share/jupyter/nbconvert/templates</code>.</p>
<p>Criar dois arquivos dentro dessa pasta: <code>conf.json</code> e <code>index.html.j2</code>.</p>
<p>O arquivo <code>conf.json</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
    <span class="nt">&#34;base_template&#34;</span><span class="p">:</span> <span class="s2">&#34;lab&#34;</span><span class="p">,</span>
    <span class="nt">&#34;mimetypes&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;text/html&#34;</span><span class="p">:</span> <span class="kc">true</span>
    <span class="p">},</span>
    <span class="nt">&#34;preprocessors&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;100-pygments&#34;</span><span class="p">:</span> <span class="p">{</span>
            <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;nbconvert.preprocessors.CSSHTMLHeaderPreprocessor&#34;</span><span class="p">,</span>
            <span class="nt">&#34;enabled&#34;</span><span class="p">:</span> <span class="kc">true</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>O significado desse arquivo é que estamos usando como base o template chamado <code>lab</code>. O que faremos será apenas adicionar conteúdo a esse template.</p>
<p>O arquivo <code>index.html.j2</code> trata-se de um template jinja. Abaixo um exemplo de arquivo que adiciona uma logomarca no cabeçalho da página. Note que a imagem está codificada em <a href="https://www.base64-image.de/" target="_blank" rel="noopener noreffer">base64</a>. Nesse template também podemos adicionar estilos css à página. No exemplo adicionamos uma linha na lateral esquerda das células de texto, para dar mais destaque a elas em meio às células de código.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">{%- extends &#39;lab/index.html.j2&#39; -%}

{%- block html_head_css -%}
  {{ super() }}
  <span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
    <span class="p">.</span><span class="nc">header</span> <span class="p">{</span>
      <span class="k">overflow</span><span class="p">:</span> <span class="kc">hidden</span><span class="p">;</span>
      <span class="k">padding-top</span><span class="p">:</span> <span class="mi">20</span><span class="kt">%</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="p">.</span><span class="nc">jp-Notebook</span><span class="p">{</span>
    <span class="k">overflow</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">background-image</span><span class="p">:</span> <span class="nb">url</span><span class="p">(</span><span class="sx">data:&lt;conteúdo-da-imagem&gt;</span><span class="p">);</span>
    <span class="k">background-repeat</span><span class="p">:</span> <span class="kc">no-repeat</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">background-position</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
    <span class="k">background-size</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="c">/* Overrides of notebook CSS for static HTML export */</span>
    <span class="p">.</span><span class="nc">jp-MarkdownOutput</span> <span class="p">{</span>
    <span class="k">margin-top</span><span class="p">:</span><span class="mi">-2</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-bottom</span><span class="p">:</span><span class="mi">-2</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">padding-top</span><span class="p">:</span><span class="mi">2</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">padding-bottom</span><span class="p">:</span><span class="mi">2</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">border-left</span><span class="p">:</span><span class="mi">2</span><span class="kt">px</span> <span class="kc">solid</span> <span class="mh">#e1dcdc</span><span class="p">;</span>
    <span class="k">border-collapse</span><span class="p">:</span><span class="kc">collapse</span><span class="p">;</span>
    <span class="k">border-top</span><span class="p">:</span><span class="kc">none</span><span class="p">;</span>
    <span class="k">border-bottom</span><span class="p">:</span><span class="kc">none</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="p">.</span><span class="nc">custom-footer</span><span class="p">{</span>
    <span class="k">display</span><span class="p">:</span> <span class="kc">block</span><span class="p">;</span>
    <span class="k">margin-left</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">text-align</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
    <span class="k">font-size</span><span class="p">:</span> <span class="kc">x-small</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
{%- endblock html_head_css -%}

{% block body_header %}
  <span class="p">&lt;</span><span class="nt">body</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jp-Notebook theme-light&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;padding: 0; margin: 0;&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;header&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;padding: 20px; margin: 20px;&#34;</span><span class="p">&gt;</span>
{% endblock body_header %}

{% block body_footer %}
  <span class="c">&lt;!-- &lt;/div&gt; --&gt;</span>
  	<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;custom-footer&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">hr</span><span class="p">&gt;</span>
	    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Este documento é propriedade de XYZ.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
	  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
	<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
{% endblock body_footer %}
</code></pre></td></tr></table>
</div>
</div><p>Depois de tudo configurado, basta usar:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">jupyter nbconvert &lt;path-to-notebook&gt; --to html --template &lt;template-name&gt;
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Transição do Matlab para Python</title>
    <link>http://pedropozzobon.com/transi%C3%A7%C3%A3o-do-matlab-para-python/</link>
    <pubDate>Sun, 07 Mar 2021 20:26:45 -0300</pubDate>
    <author>Autor</author>
    <guid>http://pedropozzobon.com/transi%C3%A7%C3%A3o-do-matlab-para-python/</guid>
    <description><![CDATA[<p>Minha entrada no mundo da programação se iniciou com o Matlab durante a faculdade. O mesmo acontece com boa parte dos engenheiros mecânicos, eletricistas ou civis (basicamente qualquer engenharia que não as de software e computação).</p>
<p>A transição para python ocorreu após a universidade, quando busquei estudar o que era ciência de dados e machine learning. Hoje uso python também nas tarefas de engenharia, pois se mostrou um ambiente muito mais flexível e produtivo que o Matlab, com a vantagem adicional de ser open-source.</p>
<p>A curva de aprendizado para chegar em um nível em que você realmente é produtivo ao escrever código foi um pouco longa. O intuito dessa série de textos é mostrar alguns tópicos importantes nessa jornada, para que talvez a sua seja mais rápida.</p>
<h2 id="bibliotecas">Bibliotecas</h2>
<p>Uma das principais diferenças é que o ecossistema de python é fragmentado em bibliotecas. Cada biblioteca deverá ser instalada separadamente e importada no início da excução do código. Além disso, cada uma terá uma uma documentação própria, que pode variar em qualidade. No caso do Matlab todas as funções tem uma documentação consistente, que pode ser acessada diretamente da própria IDE.</p>
<p>As bibliotecas necessárias para desempenhar as tarefas mais comuns se você vem de um background de engenharia são:</p>
<ul>
<li>Numpy: álgebra linear</li>
<li>Scipy: computação numérica (integração, interpolação e otimização, processamento de sinais e outros)</li>
<li>matplotlib: gráficos</li>
<li>statsmodels: estatística</li>
<li>pandas: funções de dataframes (equivalentes às Tables do matlab), importação de arquivos de texto e excel</li>
<li>simpy: matemática simbólica</li>
</ul>
<p>Como a comunidade é muito grande certamente existem bibliotecas prontas para uma necessidade muito específica. Exemplos:</p>
<ul>
<li><a href="https://pythonhosted.org/uncertainties/" target="_blank" rel="noopener noreffer">uncertainties</a>: lida com cálculos de incerteza e propagação de erros</li>
<li><a href="https://github.com/adtzlr/trusspy" target="_blank" rel="noopener noreffer">trusspy</a> : análise estrutural de treliças</li>
</ul>
<p>Tais recursos não são encontrados no Matlab ou suas toolboxes e podem ser um tremendo diferencial no aumento da produtividade de algumas tarefas.</p>
<h2 id="instalação-de-bibliotecas">Instalação de bibliotecas</h2>
<p>Em todo tutorial você verá</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">pip install &lt;nome da biblioteca&gt;
</code></pre></td></tr></table>
</div>
</div><p><strong>Não</strong> instale bibliotecas dessa forma se você instalou seu ambiente python usando o Anaconda. Substitua por</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">conda install &lt;nome da biblioteca&gt;
</code></pre></td></tr></table>
</div>
</div><p>Conda e pip são dois gerenciadores de pacotes distintos. Caso você utilize ambos simultaneamente você terá mais dificuldades em recriar o seu ambiente, além de estar mais sujeito à conflitos de versões. Essa &ldquo;bagunça&rdquo; de ambientes é a principal responsável do problema de um código executar sem problemas em uma máquina e não executa em outra. Quando se deparar com esse problema a primeira providência é garantir que as bibliotecas necessárias para a execução do código sejam as mesmas em ambas as máquinas (<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#restoring-an-environment" target="_blank" rel="noopener noreffer">leia sobre conda environments para saber como fazer isso</a>).</p>
<h2 id="organização-e-escrita-do-código">Organização e escrita do código</h2>
<p>Uma das coisas que mais me incomodava no matlab era a impossibilidade de agrupar mais de uma função no mesmo arquivo de texto. Como resultado em algumas situações haviam dezenas de arquivos, muitas vezes com funções muito parecidas.</p>
<p>Em python não existe esse problema. Escreva suas funções em quantos arquivos de texto quiser. Para chamá-las, em outro arquivo, basta fazer uma importação. Digamos que você queira importar todo o conteúdo de um script chamado &ldquo;utils&rdquo;, localizado dentro da pasta &ldquo;lib&rdquo;. Basta fazer:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">lib.utils</span> <span class="kn">as</span> <span class="nn">utils</span>
</code></pre></td></tr></table>
</div>
</div><p>Para as importações funcionarem é necessário criar um arquivo de nome __init__.py dentro da pasta lib. Esse arquivo pode ser vazio, ou possuir algum código, que será executado no momento da importação.</p>
<p>O caminho que você indicar para a importação do seu script é relativo a onde o processo do python está sendo executado. Para saber onde &ldquo;está&rdquo; o interpretador, faça:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>
<span class="n">os</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span>
<span class="c1"># cwd = current working directory</span>
</code></pre></td></tr></table>
</div>
</div><p>Caso se depare com algum erro durante a importação dos seus próprios scripts, leia sobre <a href="https://chrisyeh96.github.io/2017/08/08/definitive-guide-python-imports.html" target="_blank" rel="noopener noreffer">absolute e relative imports</a>.</p>
<h2 id="modo-de-uso">Modo de uso</h2>
<p>Existem duas &ldquo;formas de usar&rdquo; python: utilizando Jupyter Notebooks (equivalente ao Live Editor do Matlab) ou escrevendo e executando scripts.</p>
<p>Jupyter Notebooks é uma interface não apenas para executar python, mas outras linguagens também. Como vantagem é uma experiência de uso mais natural, principalmente se a tarefa é gerar gráficos e analisar dados, e a possibilidade de misturar texto, imagens e equações com código, facilitando o compartilhamento com usuários não técnicos.</p>
<p>A grande desvantagem é a impossibilidade de debugar o código, isto é, não há como &ldquo;pausar&rdquo; a execução do código na ocorrência de um erro para facilitar entender o que deu errado. Nesses casos uma alternativa é converter o jupyter notebook em um script comum e debugar o script.</p>
<h2 id="if-__init__--__name__">if __init__ == &ldquo;__name__&quot;:</h2>
<p>Você verá esse trecho de código em vários lugares. A função dele é verificar &ldquo;onde&rdquo; está ocorrendo a execuçao do código: se você está executando o script o resultado da condição é True. Caso outro arquivo chame a execução do script, a condição é False.</p>
<p>Um uso interessante é para você fazer pequenos testes com as funções escritas no seu script. Exemplo:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">func1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">):</span>
		<span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>

<span class="k">def</span> <span class="nf">func2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">):</span>
	<span class="k">return</span> <span class="n">x</span><span class="o">*</span><span class="n">y</span>

<span class="k">if</span> <span class="fm">__init__</span> <span class="o">==</span> <span class="s2">&#34;__name__&#34;</span><span class="p">:</span>
	<span class="mi">5</span> <span class="o">==</span> <span class="n">func1</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
	<span class="mi">8</span> <span class="o">==</span> <span class="n">func2</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>Ao ser executado, esse script retorna True, True</p>
<h2 id="ide">IDE</h2>
<p>Minha recomendação de IDE é o <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreffer">VS Code</a>. O VS Code é um editor de texto básico, que pode ter suas funcionalidades estendidas através de extensões, podendo assim ser transformado em uma IDE completa. Para isso instale a extensão Python e estará pronto para uso.</p>
<p>Um dos recursos mais interessantes é o suporte nativo aos Jupyter Notebooks, não sendo necessário trocar a interface para usá-los.</p>
<hr>
<p>Tem alguma dúvida? Lembra de algum tópico que demorou para enteder? Escreva nos comentários.</p>
]]></description>
</item><item>
    <title>Ligar e desligar instâncias do Google Compute Engine através de um link</title>
    <link>http://pedropozzobon.com/ligar-desligar-instancia-compute-engine-link/</link>
    <pubDate>Sun, 02 Aug 2020 12:01:14 -0300</pubDate>
    <author>Autor</author>
    <guid>http://pedropozzobon.com/ligar-desligar-instancia-compute-engine-link/</guid>
    <description><![CDATA[<h2 id="motivação">Motivação</h2>
<p>Sempre achei a interface do console do Google Cloud terrivelmente lenta. Em um projeto recente havia a necessidade de ligar e desligar constantemente uma máquina virtual, além de ativar/desativar regras de firewall. A quantidade de vezes em que via a tela de carregamento da interface no console já foi motivação suficiente para tentar automatizar essa tarefa.</p>
<figure>
     <figcaption>
            <h4>Tela de carregamento do Google Cloud</h4>
        </figcaption>
</figure>

<p>A solução encontrada foi fazer uma Cloud Function ativada por um request http (ou um link) que liga/desliga uma determinada máquina. Inicialmente procurei por uma solução mais simples, em que não fosse necessário nenhum tipo de código. Caso alguém conheça uma forma mais simples de fazer a mesma tarefa, por favor se manifeste nos comentários.</p>
<p>O código das funções pode ser visto em <a href="https://github.com/ppozzobon/cloud_funcs_utils" target="_blank" rel="noopener noreffer">meu Github</a>.</p>
<h2 id="criar-nova-conta-de-serviço">Criar nova conta de serviço</h2>
<p>A conta de serviço é utilizada pela Cloud Function para interagir com os outros serviços do Google Cloud. Ela deve ter os privilégios suficientes para realizar as tarefas que a função precisa executar.</p>
<p>Procure pelo item IAM - Admin no Cloud Console, vá para contas de serviço e crie uma nova.</p>
<figure>
     <figcaption>
            <h4>Caminho para criar a conta de serviço</h4>
        </figcaption>
</figure>

<p>Dê um nome e uma descrição para conta e vá para o próximo passo.</p>
<figure>
     
</figure>

<p>Defina um papel adequado para a conta. O papel é o que determina o que os serviços que usam essa conta podem ou não podem fazer. Como no caso pretendemos modificar configurações do Compute Engine, sugiro o papel Compute Admin.</p>
<figure>
     <figcaption>
            <h4>Selecione o papel adequado para a conta de serviço</h4>
        </figcaption>
</figure>

<p>O último passo não necessita de nenhuma configuração específica.</p>
<h2 id="criar-a-cloud-function">Criar a Cloud Function</h2>
<p>Para criar essa Cloud Function, procure esse serviço no console e ative-o, se necesssário. Crie uma nova função, dando um nome e uma região. No tipo de <em>trigger</em>, selecione http e permita chamadas não autenticadas. Isso é potencialmente falho do ponto de vista da segurança, pois qualquer um que conheça a URL e os parâmetros de invocação da função será capaz de ligar/desligar suas máquinas.</p>
<figure>
     <figcaption>
            <h4>Configurações de *triggering* (invocação) da função</h4>
        </figcaption>
</figure>

<p>Clique em configurações avançadas e defina a conta de serviço que acabou de ser criada:</p>
<figure>
     <figcaption>
            <h4>Defina a conta de serviço a ser usada pela Cloud Funtion</h4>
        </figcaption>
</figure>

<p>No próximo passo selecione a linguagem da função como python e defina o ponto de entrada para <code>main</code>. Copie e cole o código da função e do arquivo <code>requirements.txt</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">googleapiclient.discovery</span>

<span class="n">compute</span> <span class="o">=</span> <span class="n">googleapiclient</span><span class="o">.</span><span class="n">discovery</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="s1">&#39;compute&#39;</span><span class="p">,</span> <span class="s1">&#39;v1&#39;</span><span class="p">,</span> <span class="n">cache_discovery</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;Toggles compute engine instance start-stop
</span><span class="s2">    &#34;&#34;&#34;</span>

    <span class="n">project</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;project&#39;</span><span class="p">)</span>
    <span class="n">zone</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;zone&#39;</span><span class="p">)</span>
    <span class="n">instance_name</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">args</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;instance&#39;</span><span class="p">)</span>

    <span class="c1"># get current state</span>
    <span class="n">instance</span> <span class="o">=</span> <span class="n">compute</span><span class="o">.</span><span class="n">instances</span><span class="p">()</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">project</span><span class="o">=</span><span class="n">project</span><span class="p">,</span>
                                <span class="n">zone</span><span class="o">=</span><span class="n">zone</span><span class="p">,</span>
                                <span class="n">instance</span><span class="o">=</span><span class="n">instance_name</span><span class="p">)</span><span class="o">.</span><span class="n">execute</span><span class="p">()</span>

    <span class="c1"># decide command</span>
    <span class="k">if</span> <span class="n">instance</span><span class="p">[</span><span class="s1">&#39;status&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s2">&#34;TERMINATED&#34;</span><span class="p">:</span>
        <span class="n">compute</span><span class="o">.</span><span class="n">instances</span><span class="p">()</span><span class="o">.</span><span class="n">start</span><span class="p">(</span><span class="n">project</span><span class="o">=</span><span class="n">project</span><span class="p">,</span>
                                <span class="n">zone</span><span class="o">=</span><span class="n">zone</span><span class="p">,</span>
                                <span class="n">instance</span><span class="o">=</span><span class="n">instance_name</span><span class="p">)</span><span class="o">.</span><span class="n">execute</span><span class="p">()</span>

        <span class="k">return</span> <span class="s2">&#34;{} turned on&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">instance_name</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">compute</span><span class="o">.</span><span class="n">instances</span><span class="p">()</span><span class="o">.</span><span class="n">stop</span><span class="p">(</span><span class="n">project</span><span class="o">=</span><span class="n">project</span><span class="p">,</span>
                                <span class="n">zone</span><span class="o">=</span><span class="n">zone</span><span class="p">,</span>
                                <span class="n">instance</span><span class="o">=</span><span class="n">instance_name</span><span class="p">)</span><span class="o">.</span><span class="n">execute</span><span class="p">()</span>
        
        <span class="k">return</span> <span class="s2">&#34;{} turned off&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">instance_name</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">brotlipy==0.7.0
cachetools
certifi==2020.6.20
cffi==1.14.0
chardet==3.0.4
cryptography
google-api-core
google-api-python-client
google-auth
google-auth-httplib2==0.0.3
googleapis-common-protos==1.51.0
httplib2
idna
protobuf
pyasn1==0.4.8
pyasn1-modules==0.2.7
pycparser
pyOpenSSL==19.1.0
PySocks==1.7.1
pytz==2020.1
requests
rsa
simplejson
six
uritemplate==3.0.1
urllib3
</code></pre></td></tr></table>
</div>
</div><figure>
     <figcaption>
            <h4>Configuração da linguagem e ponto de entrada</h4>
        </figcaption>
</figure>

<h2 id="uso">Uso</h2>
<p>Para ativar a função basta agora chamá-la pelo seu link com os parâmetros necessários.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">https://{endereço da função}.cloudfunctions.net/{nome da função}?project={project id}&amp;zone={zona}&amp;instance={nome da instância}
</code></pre></td></tr></table>
</div>
</div><ul>
<li>endereço da função e nome da função: é o endereço fornecido no momento em que você <a href="#criar-a-cloud-function" rel="">criou a Cloud Function</a></li>
<li>project id: pode ser visto no dashboard do seu projeto:
<figure>
     <figcaption>
            <h4>Encontrando a id do projeto</h4>
        </figcaption>
</figure>
</li>
<li>zona e nome da instancia: podem ser vistos na página de resumo do Compute Engine
<figure>
     <figcaption>
            <h4>Encontrando a id do projeto</h4>
        </figcaption>
</figure>
</li>
</ul>
<p>Agora é só salvar os links nos favoritos e pronto, não será mais necessário logar no Cloud Console toda vez que precisar ligar ou desligar uma instância.</p>]]></description>
</item></channel>
</rss>
